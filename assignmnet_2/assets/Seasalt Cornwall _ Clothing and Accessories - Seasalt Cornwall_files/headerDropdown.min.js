define(['gsap'],function(gsap){'use strict';const config={animationDuration:0.5,animationEasingEffect:'power2.out',mobileDesktopBreakpoint:1025,};const selectors={arrow:'.icon-current-nav-item',closeButton:'.action.close.dropdown-menu',dropdown:'.menu-dropdown',menuItems:'header .panel.header .nav.item:not(.my-account-link)',};function isMobile(){return window.innerWidth<config.mobileDesktopBreakpoint;}
function init(){getMenuIcons().forEach((icon)=>{const tl=createDropdownAnimationTimeline(icon);initTouch(icon,tl);initHover(icon,tl);});menuClickEvents();}
function getMenuIcons(parent=document){const menuIcons=parent.querySelectorAll(selectors.menuItems);if(menuIcons.length<1){console.error('Error initialising icon dropdowns - Nav Items not found');}
return[...menuIcons];}
function initHover(icon,timeline){icon.addEventListener('mouseenter',startDropdownAnimation(timeline));icon.addEventListener('mouseleave',handleDropdownClose(timeline));}
function createDropdownAnimationTimeline(icon){const dropdown=getDropdown(icon);if(!dropdown){return;}
const timeline=gsap.gsap.timeline({paused:true,onStart:()=>{dropdown.style.display='block';},onReverseComplete:()=>{dropdown.style.display='none';},});timeline.set(dropdown,{height:0,opacity:0,});timeline.to(dropdown,{ease:config.animationEasingEffect,height:'auto',opacity:1,duration:config.animationDuration,});return timeline;}
function initTouch(icon){const actionShowDropdown=icon.querySelector('a.action.show-dropdown');if(actionShowDropdown){actionShowDropdown.addEventListener('click',(event)=>{if(isMobile()){event.preventDefault();event.stopPropagation();icon.classList.add('active');}});}
initDropdownCloseButton(icon);}
function initDropdownCloseButton(icon){const closeButton=getCloseButton(icon);if(!closeButton){return;}
closeButton.addEventListener('click',(event)=>{event.preventDefault();event.stopImmediatePropagation();icon.classList.remove('active');});}
function getDropdown(parent){return parent.querySelector(selectors.dropdown);}
function getArrow(parent){return parent.querySelector(selectors.arrow);}
function getCloseButton(parent){return parent.querySelector(selectors.closeButton);}
function startDropdownAnimation(timeline,icon){return function(event){if(!isMobile()){const icon=event.currentTarget;const dropdown=getDropdown(icon);const arrow=getArrow(icon);if(dropdown&&arrow){dropdown.style.display='block';arrow.style.right=`${getArrowOffset(icon, dropdown, arrow)}px`;timeline.play();}}};}
function startDropdownAnimationAcc(timeline,icon){if(!isMobile()){const dropdown=getDropdown(icon);if(dropdown){dropdown.style.display='block';timeline.play();}
dropdown.style.display='block';timeline.play();}}
function handleDropdownClose(tl){return function(event){if(tl){tl.reverse();}};}
function handleDropdownCloseAcc(tl){tl.reverse();}
function menuClickEvents(){const accountToggle=document.body.querySelector(".my-account-link[data-block='my-account-link']");const tl=createDropdownAnimationTimeline(accountToggle);let activeDD=false;accountToggle.parentNode.classList.add('init');accountToggle.querySelector(".load").addEventListener('click',function(e){e.preventDefault();this.parentNode.classList.toggle('open');if(activeDD==false){startDropdownAnimationAcc(tl,accountToggle);activeDD=true;document.addEventListener('click',handleOutsideClick);}else{handleDropdownCloseAcc(tl);activeDD=false;document.removeEventListener('click',handleOutsideClick);}});const menuAction=document.body.querySelector(".seasalt-menu-desktop__list");const minicartAction=document.body.querySelector(".minicart-wrapper");const closeMyAccountNav=function(){handleDropdownCloseAcc(tl);activeDD=false;accountToggle.querySelector(".show-dropdown").classList.remove('active');accountToggle.classList.remove('open');};const handleOutsideClick=(e)=>{if(!accountToggle.parentNode.contains(e.target)){closeMyAccountNav();}};menuAction.addEventListener('mouseenter',function(e){closeMyAccountNav();});minicartAction.addEventListener('mouseenter',function(e){closeMyAccountNav();});}
function getElementCentreX(element){return(element.getBoundingClientRect().left+element.getBoundingClientRect().width / 2);}
function getArrowOffset(icon,dropdown,arrow){const rightOffset=dropdown.getBoundingClientRect().right-getElementCentreX(icon);const arrowWidth=arrow.getBoundingClientRect().width;const deadCentre=rightOffset-arrowWidth / 2;const rhsLimit=0;const lhsLimit=dropdown.getBoundingClientRect().width-arrowWidth;return clamp(rhsLimit,lhsLimit,deadCentre);}
function clamp(min,max,value){return Math.max(Math.min(value,max),min);}
return{init,isMobile};});